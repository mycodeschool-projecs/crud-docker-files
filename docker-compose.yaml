
networks:
  mynet:
    driver: bridge

volumes:
  db_data:
    driver: local
  kibana_data_test:
  es_data_test:
  logstash_pipeline:

x-variables:
  elastic_password: &elastic_password 'passwOrd'
  kibana_password: &kibana_password 'passwOrd'


services:

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kube_db
    networks:
      - mynet
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 1

  kube-land:
    image: mycodeschool/crud-auth-api:19.03.2025.09.39.50
    networks:
      - mynet
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy

  kube-ms1:
    image: mycodeschool/crud-command-api:07.03.2025.17.59.59
    networks:
      - mynet
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      # ADDITIONAL_CORS_ORIGIN: "http://localhost:5000,http://localhost:3000,http://54.155.119.235:3000,http://54.155.119.235:5000,http://icode.mywire.org:5000,http://icode.mywire.org:3000"
    depends_on:
      mysql:
        condition: service_healthy

  client:
    image: mycodeschool/crud-client-api:16.03.2025.08.35.19
    networks:
      - mynet
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_PATH_TO=development
#      - REACT_APP_API_URL=http://54.155.119.235:5000
      - REACT_APP_API_URL=http://localhost:3000
     # - REACT_APP_API_URL=http://icode.mywire.org:5000

 
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      - mynet
    ports:
      - "9411:9411"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9411/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      ELASTIC_PASSWORD: *elastic_password
      discovery.type: 'single-node'
      cluster.name: 'elasticsearch'
      bootstrap.memory_lock: 'true'
      ES_JAVA_OPTS: '-Xms1g -Xmx1g'
      xpack.security.enabled: 'true'
      xpack.security.http.ssl.enabled: 'false'
    networks:
      - mynet
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - es_data_test:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
      ELASTICSEARCH_USERNAME: 'kibana_system'
      ELASTICSEARCH_PASSWORD: *kibana_password
      TELEMETRY_ENABLED: 'false'
    networks:
      - mynet
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    volumes:
      - kibana_data_test:/usr/share/kibana/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.1
    container_name: logstash
    environment:
      ELASTIC_PASSWORD: *elastic_password
      CONFIG_STRING: |
        input {
          tcp {
            port => 3100
            codec => json_lines
          }
        }
        output {
          elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            user => "elastic"
            password => "$${ELASTIC_PASSWORD}"
            ssl => false
          }
        }
    networks:
      - mynet
    ports:
      - "3000:3000"
    depends_on:
      - elasticsearch

  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: setup
    environment:
      ELASTIC_PASSWORD: *elastic_password
      KIBANA_PASSWORD: *kibana_password
    command:
      - bash
      - -c
      - |
        echo "Waiting for Elasticsearch availability";
        until curl -s http://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 10; done;
        echo "Setting kibana_system password";
        until curl -s -X POST -u "elastic:$${ELASTIC_PASSWORD}" -H "Content-Type: application/json" \
          http://elasticsearch:9200/_security/user/kibana_system/_password \
          -d "{\"password\":\"$${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
    networks:
      - mynet
